# ========================================
# AuthHub Application Configuration
# ========================================
spring:
  application:
    name: authhub-web-api

  # ========================================
  # Database Configuration
  # ========================================
  datasource:
    url: jdbc:mysql://localhost:3306/authhub?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: ${DB_USER:root}
    password: ${DB_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # ========================================
  # JPA Configuration
  # ========================================
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: validate  # Flyway가 스키마 관리를 담당하므로 validate만 수행
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  # ========================================
  # Flyway Configuration
  # ========================================
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration
    validate-on-migrate: true
    out-of-order: false
    placeholder-replacement: false
    encoding: UTF-8
    table: flyway_schema_history
    sql-migration-prefix: V
    sql-migration-separator: __
    sql-migration-suffixes: .sql
    clean-disabled: true  # 프로덕션 환경 보호

  # ========================================
  # Redis Configuration
  # ========================================
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
          max-wait: -1ms

# ========================================
# Server Configuration
# ========================================
server:
  port: 8080
  shutdown: graceful
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

# ========================================
# Logging Configuration
# ========================================
logging:
  level:
    root: INFO
    com.ryuqq.authhub: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.flywaydb: INFO

# ========================================
# Management & Actuator Configuration
# ========================================
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

# ========================================
# SpringDoc OpenAPI Configuration
# ========================================
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operations-sorter: alpha
    tags-sorter: alpha
    display-request-duration: true
    doc-expansion: none
  show-actuator: false
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# ========================================
# Rate Limit Configuration
# ========================================
rate-limit:
  time-window-seconds: 60
  ip-based-limit: 100
  user-based-limit: 1000
  endpoint-based-limit: 5000
